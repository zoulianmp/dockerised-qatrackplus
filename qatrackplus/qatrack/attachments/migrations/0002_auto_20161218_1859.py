# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2016-12-18 23:59
from __future__ import unicode_literals

import os

from django.conf import settings
from django.core.files.base import File
from django.db import migrations

from qatrack.attachments.models import move_tmp_file
from qatrack.qa.models import UPLOAD


def uploads_to_attachments(apps, schema_editor):
    """Convert all old style file uploads to Attachment models"""


    TestInstance = apps.get_model("qa", "TestInstance")
    Attachment = apps.get_model("attachments", "Attachment")

    tis = TestInstance.objects.filter(
        unit_test_info__test__type=UPLOAD,
        string_value__isnull=False
    ).exclude(
        string_value=""
    )

    errors = []
    for ti in tis:
        try:
            tli_pk = ti.test_list_instance.pk

            orig_path = os.path.join(settings.UPLOAD_ROOT, str(tli_pk), ti.string_value)
            fname = os.path.basename(orig_path)

            f = File(open(orig_path, 'rb'))

            attachment = Attachment(
                comment="Composite created file (migrated)",
                created_by=ti.created_by,
                testinstance=ti
            )

            # add attributes required to move temp file
            attachment.can_finalize = True
            attachment.finalized = False
            attachment.type = "testinstance"
            attachment.owner = ti
            attachment.attachment.save(fname, f)

            # use old file name to avoid duplicate dates/unique ids in filename
            move_tmp_file(attachment, save=True, force=True, new_name=fname)

            TestInstance.objects.filter(pk=ti.pk).update(
                string_value=attachment.pk
            )
        except IOError:
            errors.append(ti)

    for error in errors:
        print("Failed to move '%s' for test instance id=%d" % (error.string_value, error.pk))


class Migration(migrations.Migration):

    dependencies = [
        ('attachments', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(uploads_to_attachments)
    ]
